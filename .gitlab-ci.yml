# used by our internal gitlab server

stages:
  - prepare
  - build
  - test
  - deploy

prepare:aten:merged:
  stage: prepare
  before_script:
    - git config --global user.email 'giovanni@fragcolor.xyz'
    - git config --global user.name 'Giovanni'
  script:
    - git clone -b fragcolor-devel https://$GITHUB_LOGIN@github.com/fragcolor-xyz/pytorch.git
    - cd pytorch
    - git remote add upstream https://github.com/pytorch/pytorch.git
    - git pull upstream master --no-edit
    - git push
    - git rev-parse HEAD > ../torch/commit.txt
    - date +%Y.%m.%d.$CI_PIPELINE_ID > ../docker/version.txt
  artifacts:
    paths:
      - torch/commit.txt
      - docker/version.txt
  tags:
    - LINUX
  only:
    refs:
      - schedules
    variables:
      - $FETCH_PYTORCH == "true"

prepare:aten:fast:
  stage: prepare
  before_script:
    - git config --global user.email 'giovanni@fragcolor.xyz'
    - git config --global user.name 'Giovanni'
  script:
    - git clone -b fragcolor-devel https://$GITHUB_LOGIN@github.com/fragcolor-xyz/pytorch.git
    - cd pytorch
    - git rev-parse HEAD > ../torch/commit.txt
    - date +%Y.%m.%d.$CI_PIPELINE_ID > ../docker/version.txt
  artifacts:
    paths:
      - torch/commit.txt
      - docker/version.txt
  tags:
    - LINUX
  only:
    refs:
      - schedules
    variables:
      - $FETCH_PYTORCH == "false"

build:aten:cuda9.2:
  stage: build
  script:
    # Clean up docker - make sure we got space
    - docker rm $(docker ps -q -f status=exited) || true
    - docker volume rm $(docker volume ls -qf dangling=true) || true
    - docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || true
    # Build
    - cd docker
    - sed -i -r "s/[12][0-9]{3}.[01][0-9].[0-3][0-9].[0-9]+/`cat version.txt`/g" conda/aten/meta.yaml
    - sed -i -r "s/[12][0-9]{3}.[01][0-9].[0-3][0-9].[0-9]+/`cat version.txt`/g" conda/aten_cuda10.0/meta.yaml
    - sed -i -r "s/[12][0-9]{3}.[01][0-9].[0-3][0-9].[0-9]+/`cat version.txt`/g" conda/aten_wasm/meta.yaml
    - sed -i -r "s/[12][0-9]{3}.[01][0-9].[0-3][0-9].[0-9]+/`cat version.txt`/g" ../conda/nimtorch/meta.yaml # always needed by the next step
    - docker pull nvidia/cuda:9.2-devel-ubuntu18.04
    - docker build -f Dockerfile-aten-cuda9.2 -t docker_aten_cuda92 --build-arg TOKEN=$CONDA_TOKEN --build-arg PYTORCH_COMMIT=`cat ../torch/commit.txt` .
  dependencies:
    - prepare:aten:merged
    - prepare:aten:fast
  artifacts:
    paths:
      # Notice files from docker won't be passed, specially cos Docker in Docker
      - torch/commit.txt
      - docker/version.txt
      - docker/conda/aten/meta.yaml
      - docker/conda/aten_cuda10.0/meta.yaml
      - docker/conda/aten_wasm/meta.yaml
      - conda/nimtorch/meta.yaml
  tags:
    - LINUX, DOCKER
  only:
    refs:
      - schedules

build:aten:cuda10.0:
  stage: build
  script:
    # Clean up docker - make sure we got space
    - docker rm $(docker ps -q -f status=exited) || true
    - docker volume rm $(docker volume ls -qf dangling=true) || true
    - docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || true
    # Build
    - cd docker
    - sed -i -r "s/[12][0-9]{3}.[01][0-9].[0-3][0-9].[0-9]+/`cat version.txt`/g" conda/aten/meta.yaml
    - sed -i -r "s/[12][0-9]{3}.[01][0-9].[0-3][0-9].[0-9]+/`cat version.txt`/g" conda/aten_cuda10.0/meta.yaml
    - sed -i -r "s/[12][0-9]{3}.[01][0-9].[0-3][0-9].[0-9]+/`cat version.txt`/g" conda/aten_wasm/meta.yaml
    - sed -i -r "s/[12][0-9]{3}.[01][0-9].[0-3][0-9].[0-9]+/`cat version.txt`/g" ../conda/nimtorch/meta.yaml # always needed by the next step
    - docker pull nvidia/cuda:10.0-devel-ubuntu18.04
    - docker build -f Dockerfile-aten-cuda10.0 -t docker_aten_cuda10 --build-arg TOKEN=$CONDA_TOKEN --build-arg PYTORCH_COMMIT=`cat ../torch/commit.txt` .
  dependencies:
    - prepare:aten:merged
    - prepare:aten:fast
  tags:
    - LINUX, DOCKER
  only:
    refs:
      - schedules

build:aten:wasm:
  stage: build
  script:
    # Clean up docker - make sure we got space
    - docker rm $(docker ps -q -f status=exited) || true
    - docker volume rm $(docker volume ls -qf dangling=true) || true
    - docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || true
    # Build
    - cd docker
    - sed -i -r "s/[12][0-9]{3}.[01][0-9].[0-3][0-9].[0-9]+/`cat version.txt`/g" conda/aten/meta.yaml
    - sed -i -r "s/[12][0-9]{3}.[01][0-9].[0-3][0-9].[0-9]+/`cat version.txt`/g" conda/aten_cuda10.0/meta.yaml
    - sed -i -r "s/[12][0-9]{3}.[01][0-9].[0-3][0-9].[0-9]+/`cat version.txt`/g" conda/aten_wasm/meta.yaml
    - sed -i -r "s/[12][0-9]{3}.[01][0-9].[0-3][0-9].[0-9]+/`cat version.txt`/g" ../conda/nimtorch/meta.yaml # always needed by the next step
    - docker pull base/devel
    - docker build -f Dockerfile-aten-wasm -t docker_aten_wasm --build-arg TOKEN=$CONDA_TOKEN --build-arg PYTORCH_COMMIT=`cat ../torch/commit.txt` .
  dependencies:
    - prepare:aten:merged
    - prepare:aten:fast
  artifacts:
    paths:
      - conda/nimtorch/meta.yaml # only this is needed for wasm build
  tags:
    - LINUX, DOCKER
  only:
    refs:
      - schedules

test:nimtorch:native:
  stage: test
  before_script:
    - export PATH="$PATH:$HOME/miniconda3/bin"
    # unique name per branch to keep cached
    - export ENVNAME=nimtorch_testing_$CI_COMMIT_REF_SLUG
    - conda env remove -n $ENVNAME || true
  script:
    # Not on docker, we need results of this operations
    - conda create -n $ENVNAME -c fragcolor pyyaml `cat conda/nimtorch/meta.yaml | grep -o "aten ==[12][0-9]*.[01][0-9]*.[0-3][0-9]*.[0-9]*" | sed -r "s/aten /aten/g"`
    - export ATEN=$HOME/miniconda3/envs/$ENVNAME
    - export PATH="$PATH:$HOME/miniconda3/envs/$ENVNAME/bin"
    - nimble test
  after_script:
    - git clean -x -d -f
    # Recycle space - should keep latest pkg on branch
    - conda clean -y --all
  dependencies:
    - build:aten:cuda9.2
  artifacts:
    paths:
      - torch/
      - conda/
      - docker/
  tags:
    - LINUX, CONDA

.test:nimtorch:cuda:
  stage: test
  script:
    # Cuda 9.2
    - docker build -f docker/Dockerfile-tests-cuda9.2 -t nimtorch-test-cuda9.2 --build-arg USER_ID=`id -u` --build-arg GROUP_ID=`id -g` --build-arg ATEN=`cat conda/nimtorch/meta.yaml | grep -o "aten ==[12][0-9]*.[01][0-9]*.[0-3][0-9]*.[0-9]*" | sed -r "s/aten /aten/g"` .
    - docker run --runtime=nvidia --rm -t -u`id -u`:`id -g` nimtorch-test-cuda9.2:latest nimble test_cuda
    - docker run --runtime=nvidia --rm -t -u`id -u`:`id -g` nimtorch-test-cuda9.2:latest nimble test_clang_cuda
    # Cuda 10.0
    - docker build -f docker/Dockerfile-tests-cuda10.0 -t nimtorch-test-cuda10.0 --build-arg USER_ID=`id -u` --build-arg GROUP_ID=`id -g` --build-arg ATEN=`cat conda/nimtorch/meta.yaml | grep -o "aten ==[12][0-9]*.[01][0-9]*.[0-3][0-9]*.[0-9]*" | sed -r "s/aten /aten/g"` .
    - docker run --runtime=nvidia --rm -t -u`id -u`:`id -g` nimtorch-test-cuda10.0:latest nimble test_cuda
    - docker run --runtime=nvidia --rm -t -u`id -u`:`id -g` nimtorch-test-cuda10.0:latest nimble test_clang_cuda
  after_script:
    - git clean -x -d -f
  dependencies:
    - build:aten:cuda9.2
    - build:aten:cuda10.0
  tags:
    - LINUX, DOCKER, DOCKERNVIDIA

.test:nimtorch:wasm:
  stage: test
  script:
    - docker build -f docker/Dockerfile-tests-wasm -t nimtorch-test-wasm --build-arg USER_ID=`id -u` --build-arg GROUP_ID=`id -g` --build-arg ATEN=`cat conda/nimtorch/meta.yaml | grep -o "aten ==[12][0-9]*.[01][0-9]*.[0-3][0-9]*.[0-9]*" | sed -r "s/aten /aten/g"` .
    - docker run --rm -t -u`id -u`:`id -g` nimtorch-test-wasm:latest nimble test_wasm
  after_script:
    - git clean -x -d -f
  dependencies:
    - build:aten:wasm
  tags:
    - LINUX, DOCKER

deploy:nimtorch:
  stage: deploy
  before_script:
    - git config --global user.email 'giovanni@fragcolor.xyz'
    - git config --global user.name 'Giovanni'
  script:
    # Merge on current branch
    - git stash
    - git checkout $CI_COMMIT_REF_NAME
    - git reset --hard origin/$CI_COMMIT_REF_NAME
    - git stash pop || true # allow failure
    - git commit --allow-empty -a -m "PyTorch upstream nightly success"
    - git push ssh://git@git.fragcolor.xyz:27030/fragcolor/nimtorch.git $CI_COMMIT_REF_NAME
    # Merge master on release
    - git checkout release
    - git reset --hard origin/release
    - git merge master
    - git push ssh://git@git.fragcolor.xyz:27030/fragcolor/nimtorch.git release
    # Also push release on github
    - git push https://$GITHUB_LOGIN@github.com/fragcolor-xyz/nimtorch.git release
    # Finally trigger conda automations, aka: windows and macOS release builds
    - curl -X POST -F token=$TRIGGER_TOKEN -F "ref=$CI_COMMIT_REF_NAME" -F "variables[TRIGGER]=CondaDeploy" -F "variables[PYTORCH_COMMIT]=`cat torch/commit.txt`" -F "variables[NIMTORCH_COMMIT]=`git rev-parse HEAD`" https://git.fragcolor.xyz/api/v4/projects/32/trigger/pipeline
  dependencies:
    - test:nimtorch:native
  tags:
    - DEPLOY
  only:
    refs:
      - schedules
